spring:
  security:
    oauth2:
      client:
        registration:
          google: #http://localhost:8096/login/oauth2/code/google
            client-id: 185283478737-tgpvk43eb6gv0spoucbvov9k37fspkmv.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          facebook:
            client-id: 1555006978584294
            client-secret: 5a58030c9dbd1220f5f50ae3e6ff21ba
            scope:
              - email
              - public_profile
              # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
              # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver: #http://localhost:8080/login/oauth2/code/naver
            client-id: emeBh5bCoCLhyF6g8Lny
            client-secret: NRm8akZlF9
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8096/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.